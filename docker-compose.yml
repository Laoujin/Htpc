version: "2.1"

services:
  youtube:
    image: kmb32123/youtube-dl-server
    container_name: youtube-dl
    volumes:
      - ${YOUTUBE_PATH}:/youtube-dl
    ports:
      - ${YOUTUBE_PORT}:8080
    expose:
      - ${YOUTUBE_PORT}
    restart: always

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    volumes:
      - ${DOCKER_SOCKET}:/var/run/docker.sock
      - portainer_data:/data
    ports:
      - ${PORTAINER_PORT_UI}:9000
      - ${PORTAINER_PORT_SSH}:8000
    expose:
      - ${PORTAINER_PORT_UI}
      - ${PORTAINER_PORT_SSH}
    restart: always

  ombi:
    image: linuxserver/ombi
    container_name: htpc-ombi
    # hostname: ombi
    # domainname: ombi.htpc
    # mac_address: 00:00:00:41:16:01
    # networks:
    #   - htpc-public
    network_mode: host
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      # - BASE_URL=/ombi
    volumes:
      - ${CONFIG_PATH}/ombi:/config
    ports:
      - ${OMBI_PORT}:3579
    expose:
      - ${OMBI_PORT}
    restart: always

  sonarr:
    image: linuxserver/sonarr
    container_name: htpc-sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/sonarr:/config
      - ${CONFIG_PATH}/sonarr-rtc:/dev/rtc:ro
      - ${SERIES_PATH}:/tv
      - ${DOWNLOAD_PATH}:/downloads
    ports:
      - ${SONARR_PORT}:8989
    expose:
      - ${SONARR_PORT}
    restart: always



  radarr:
    image: linuxserver/radarr
    container_name: htpc-radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/radarr:/config
      - ${MOVIES_PATH}:/movies
      - ${DOWNLOAD_PATH}:/downloads
    ports:
      - ${RADARR_PORT}:7878
    expose:
      - ${RADARR_PORT}
    restart: always



  transmission:
    image: linuxserver/transmission
    container_name: htpc-transmission
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - TRANSMISSION_WEB_HOME=/transmission-web-control/
      - USER=${TRANSMISSION_USER}
      - PASS=${TRANSMISSION_PASS}
    volumes:
      - ${CONFIG_PATH}/transmission:/config
      - ${DOWNLOAD_PATH}:/downloads
      - ${BLACKHOLE_PATH}:/watch
    ports:
      - ${TRANSMISSION_PORT}:9091
      - 51413:51413
      - 51413:51413/udp
    expose:
      - ${TRANSMISSION_PORT}
      - 51413
      - 51413/udp
    restart: always


  jackett:
    image: linuxserver/jackett
    container_name: htpc-jackett
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - AUTO_UPDATE=true
    volumes:
      - ${CONFIG_PATH}/jackett:/config
      - ${BLACKHOLE_PATH}:/downloads
    ports:
      - ${JACKETT_PORT}:9117
    expose:
      - ${JACKETT_PORT}
    restart: always


  bazarr:
    image: linuxserver/bazarr
    container_name: htpc-bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/bazarr:/config
      - ${SERIES_PATH}:/tv
      - ${MOVIES_PATH}:/movies
    ports:
      - ${BAZARR_PORT}:6767
    expose:
      - ${BAZARR_PORT}
    restart: always


  jellyfin:
    image: linuxserver/jellyfin
    container_name: htpc-jellyfin
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/jellyfin:/config
      - ${SERIES_PATH}:/data/tvshows
      - ${MOVIES_PATH}:/data/movies
      - ${YOUTUBE_PATH}:/data/youtube
    ports:
      - ${JELLYFIN_PORT}:8096
      - ${JELLYFIN_PORT_SSH}:8090
    expose:
      - ${JELLYFIN_PORT}
      - ${JELLYFIN_PORT_SSH}
    restart: always


  heimdall:
    image: linuxserver/heimdall
    container_name: htpc-heimdall
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG_PATH}/heimdall:/config
    ports:
      - ${HEIMDALL_PORT}:80
      - ${HEIMDALL_PORT_SSH}:443
    expose:
      - ${HEIMDALL_PORT}
      - ${HEIMDALL_PORT_SSH}
    restart: always


  watchtower:
    image: v2tec/watchtower
    container_name: watchtower
    restart: unless-stopped
    logging:
      driver: 'json-file'
      options:
        max-file: '5'
        max-size: '10m'
    # networks:
    #   - internal
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WATCHTOWER_NOTIFICATIONS=${WATCHTOWER_NOTIFICATION}
      - WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL=${WATCHTOWER_SLACK}
      - WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER=Watchtower
      # - WATCHTOWER_NOTIFICATIONS=email
      # - WATCHTOWER_NOTIFICATION_EMAIL_FROM=${SMTP_FROM}
      # - WATCHTOWER_NOTIFICATION_EMAIL_TO=${WATCHTOWER_EMAIL}
      # - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=${SMTP_SERVER}
      # - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=${SMTP_PORT}
      # - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=${SMTP_USER}
      # - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=${SMTP_PASS}
    volumes:
      - ${DOCKER_SOCKET}:/var/run/docker.sock
      - /etc/ssl/certs:/etc/ssl/certs
    command: '--schedule "${WATCHTOWER_SCHEDULE}" --cleanup'
    # labels:
    #   - 'traefik.enable=false'


volumes:
  portainer_data:
